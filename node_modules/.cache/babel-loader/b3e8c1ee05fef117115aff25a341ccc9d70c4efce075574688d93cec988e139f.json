{"ast":null,"code":"var _jsxFileName = \"/Users/sivatejagonella/Projects/lms-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./App.css\";\nimport BookTable1 from \"./BookTable1\";\nimport NavigationBar from \"./NavigationBar\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bookList, setBookList] = useState([]);\n  const [bookName, setBookName] = useState(\"\");\n  const [numberOfBooks, setNumberOfBooks] = useState(0);\n  const [authors, setAuthors] = useState([{\n    authorName: \"\"\n  }]);\n  const [bookAdded, setBookAdded] = useState(1);\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(\"http://localhost:8080/demo/listBooks\").then(async res => {\n        const data = await res.json();\n        setBookList(data);\n      }).catch(err => {\n        console.log(err.message);\n      });\n    };\n    fetchData();\n  }, [bookAdded]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Book name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input input_lg bookInputBox\",\n          id: \"bookName\",\n          value: bookName,\n          onChange: e => setBookName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), authors.map((author, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Author name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input input_lg bookInputBox\",\n            id: \"authorNames\",\n            value: author.authorName,\n            onChange: e => {\n              let newAuthors = [...authors];\n              newAuthors[index].authorName = e.target.value;\n              setAuthors(newAuthors);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"addAuthorButton\",\n          className: \"btn btn-primary btn-lg\",\n          onClick: addAuthor,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Number of books: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input input_lg bookInputBox\",\n          id: \"numberOfBooks\",\n          value: numberOfBooks,\n          onChange: e => setNumberOfBooks(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"btn btn-primary btn-lg addButton\",\n          onClick: addToList,\n          children: \"Add book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BookTable1, {\n        books: bookList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n  function addToList() {\n    fetch(\"http://localhost:8080/demo/addBook\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        bookName: bookName,\n        authorNames: authors,\n        numberOfBooks: numberOfBooks\n      })\n    }).then(async res => {\n      console.log(await res.json());\n    });\n    setBookAdded(bookAdded + 1);\n    setBookName(\"\");\n    setAuthors([{\n      authorName: \"\"\n    }]);\n    setNumberOfBooks(0);\n  }\n  function addAuthor() {\n    setAuthors([...authors, {\n      authorName: \"\"\n    }]);\n  }\n}\n_s(App, \"qI/4058ECz9aS/NkkC4+dm1vpKc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Button","BookTable1","NavigationBar","BrowserRouter","Route","Routes","App","bookList","setBookList","bookName","setBookName","numberOfBooks","setNumberOfBooks","authors","setAuthors","authorName","bookAdded","setBookAdded","fetchData","fetch","then","res","data","json","catch","err","console","log","message","e","preventDefault","target","value","map","author","index","newAuthors","addAuthor","addToList","method","headers","Accept","body","JSON","stringify","authorNames"],"sources":["/Users/sivatejagonella/Projects/lms-ui/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./App.css\";\nimport BookTable1 from \"./BookTable1\";\nimport NavigationBar from \"./NavigationBar\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [bookList, setBookList] = useState([]);\n  const [bookName, setBookName] = useState(\"\");\n  const [numberOfBooks, setNumberOfBooks] = useState(0);\n  const [authors, setAuthors] = useState([\n    {\n      authorName: \"\",\n    },\n  ]);\n  const [bookAdded, setBookAdded] = useState(1);\n\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(\"http://localhost:8080/demo/listBooks\")\n        .then(async (res) => {\n          const data = await res.json();\n          setBookList(data);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    };\n    fetchData();\n  }, [bookAdded]);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavigationBar/>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <label className=\"label\">Book name: </label>\n          <input\n            type=\"text\"\n            className=\"input input_lg bookInputBox\"\n            id=\"bookName\"\n            value={bookName}\n            onChange={(e) => setBookName(e.target.value)}\n          ></input>\n          <br></br>\n          {authors.map((author, index) => (\n            <div key={index}>\n              <label className=\"label\">Author name: </label>\n              <input\n                type=\"text\"\n                className=\"input input_lg bookInputBox\"\n                id=\"authorNames\"\n                value={author.authorName}\n                onChange={(e) => {\n                  let newAuthors = [...authors];\n                  newAuthors[index].authorName = e.target.value;\n                  setAuthors(newAuthors);\n                }}\n              ></input>\n            </div>\n          ))}\n          <Button\n            id=\"addAuthorButton\"\n            className=\"btn btn-primary btn-lg\"\n            onClick={addAuthor}\n          >\n            +\n          </Button>\n          <br></br>\n          <label className=\"label\">Number of books: </label>\n          <input\n            type=\"text\"\n            className=\"input input_lg bookInputBox\"\n            id=\"numberOfBooks\"\n            value={numberOfBooks}\n            onChange={(e) => setNumberOfBooks(e.target.value)}\n          ></input>\n          <br></br>\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary btn-lg addButton\"\n            onClick={addToList}\n          >\n            Add book\n          </Button>\n        </form>\n        <BookTable1 books={bookList} />\n      </div>\n    </BrowserRouter>\n  );\n\n  function addToList() {\n    fetch(\"http://localhost:8080/demo/addBook\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        bookName: bookName,\n        authorNames: authors,\n        numberOfBooks: numberOfBooks,\n      }),\n    })\n    .then(async res => {\n      console.log(await res.json());\n    });\n    setBookAdded(bookAdded + 1);\n    setBookName(\"\");\n    setAuthors([{ authorName: \"\" }]);\n    setNumberOfBooks(0);\n  }\n\n  function addAuthor() {\n    setAuthors([...authors, { authorName: \"\" }]);\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/sivatejagonella/Projects/Archive/lms-ui/src/context/auth-context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isLoggedIn: false,\n  onLogin: (email, password) => {},\n  onLogout: () => {}\n});\nexport default AuthContext;\nexport const AuthProvider = props => {\n  _s();\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [loggedIn, setLoggedIn, removeLoggedIn] = useCookies([\"Auth\"]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setIsUserLoggedIn(loggedIn.Auth === \"1\");\n  }, [loggedIn]);\n  const loginHandler = (email, password) => {\n    fetch(\"http://localhost:8080/demo/getUser\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userEmail: email,\n        userPassword: password\n      })\n    }).then(async res => {\n      let result = await res.json();\n      if (result === 1) {\n        setLoggedIn(\"Auth\", 1, {\n          path: \"/\"\n        });\n        setIsUserLoggedIn(true);\n        navigate(\"/\");\n      }\n    });\n  };\n  const logoutHandler = () => {\n    setIsUserLoggedIn(false);\n    removeLoggedIn(\"Auth\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isUserLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bVAMDf3vRAd95vFmO5sV8CAAOHk=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useCookies","useNavigate","AuthContext","isLoggedIn","onLogin","email","password","onLogout","AuthProvider","props","isUserLoggedIn","setIsUserLoggedIn","loggedIn","setLoggedIn","removeLoggedIn","navigate","Auth","loginHandler","fetch","method","headers","Accept","body","JSON","stringify","userEmail","userPassword","then","res","result","json","path","logoutHandler","children"],"sources":["/Users/sivatejagonella/Projects/Archive/lms-ui/src/context/auth-context.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext({\n  isLoggedIn: false,\n  onLogin: (email, password) => {},\n  onLogout: () => {},\n});\n\nexport default AuthContext;\n\nexport const AuthProvider = (props) => {\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [loggedIn, setLoggedIn, removeLoggedIn] = useCookies([\"Auth\"]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setIsUserLoggedIn(loggedIn.Auth === \"1\");\n  }, [loggedIn]);\n\n  const loginHandler = (email, password) => {\n    fetch(\"http://localhost:8080/demo/getUser\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userEmail: email,\n            userPassword: password,\n          }),\n        })\n        .then(async res => {\n          let result = await res.json();\n          if(result === 1){\n            setLoggedIn(\"Auth\", 1, { path: \"/\" });\n            setIsUserLoggedIn(true);\n            navigate(\"/\");\n          }\n        });\n  };\n  const logoutHandler = () => {\n    setIsUserLoggedIn(false);\n    removeLoggedIn(\"Auth\");\n  };\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isUserLoggedIn,\n        onLogin: loginHandler,\n        onLogout: logoutHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EAChCM,UAAU,EAAE,KAAK;EACjBC,OAAO,EAAE,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAC,CAAC;EAChCC,QAAQ,EAAE,MAAM,CAAC;AACnB,CAAC,CAAC;AAEF,eAAeL,WAAW;AAE1B,OAAO,MAAMM,YAAY,GAAIC,KAAK,IAAK;EAAA;EACrC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACa,QAAQ,EAAEC,WAAW,EAAEC,cAAc,CAAC,GAAGd,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;EACpE,MAAMe,QAAQ,GAAGd,WAAW,EAAE;EAE9BH,SAAS,CAAC,MAAM;IACda,iBAAiB,CAACC,QAAQ,CAACI,IAAI,KAAK,GAAG,CAAC;EAC1C,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMK,YAAY,GAAG,CAACZ,KAAK,EAAEC,QAAQ,KAAK;IACxCY,KAAK,CAAC,oCAAoC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,SAAS,EAAEpB,KAAK;QAChBqB,YAAY,EAAEpB;MAChB,CAAC;IACH,CAAC,CAAC,CACDqB,IAAI,CAAC,MAAMC,GAAG,IAAI;MACjB,IAAIC,MAAM,GAAG,MAAMD,GAAG,CAACE,IAAI,EAAE;MAC7B,IAAGD,MAAM,KAAK,CAAC,EAAC;QACdhB,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;UAAEkB,IAAI,EAAE;QAAI,CAAC,CAAC;QACrCpB,iBAAiB,CAAC,IAAI,CAAC;QACvBI,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC;EACR,CAAC;EACD,MAAMiB,aAAa,GAAG,MAAM;IAC1BrB,iBAAiB,CAAC,KAAK,CAAC;IACxBG,cAAc,CAAC,MAAM,CAAC;EACxB,CAAC;EACD,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLX,UAAU,EAAEO,cAAc;MAC1BN,OAAO,EAAEa,YAAY;MACrBV,QAAQ,EAAEyB;IACZ,CAAE;IAAA,UAEDvB,KAAK,CAACwB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA7CWzB,YAAY;EAAA,QAEyBR,UAAU,EACzCC,WAAW;AAAA;AAAA,KAHjBO,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
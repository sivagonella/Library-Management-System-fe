{"ast":null,"code":"var _jsxFileName = \"/Users/sivatejagonella/Projects/Archive/lms-ui/src/context/auth-context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isLoggedIn: false,\n  userRole: \"\",\n  onLogin: (email, password) => {},\n  onLogout: () => {}\n});\nexport default AuthContext;\nexport const AuthProvider = props => {\n  _s();\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [userRole, setUserRole] = useState(\"\");\n  const [loggedIn, setLoggedIn, removeLoggedIn] = useCookies([\"Auth\"]);\n  useEffect(() => {\n    setIsUserLoggedIn(loggedIn.Auth === \"1\");\n  }, [loggedIn]);\n  const loginHandler = (email, password) => {\n    fetch(\"http://localhost:8080/demo/getUser\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(async res => {\n      let result = await res.json();\n      if (result.isCorrectPassword === 1) {\n        setLoggedIn(\"Auth\", 1, {\n          path: \"/\"\n        });\n        setUserRole(result.role);\n        setIsUserLoggedIn(true);\n        console.log(result);\n      }\n    });\n  };\n  const logoutHandler = () => {\n    setIsUserLoggedIn(false);\n    removeLoggedIn(\"Auth\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isUserLoggedIn,\n      userRole: userRole,\n      onLogin: loginHandler,\n      onLogout: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"VVHqYLlGj9hHzij+QWO8X6Ho2X0=\", false, function () {\n  return [useCookies];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useCookies","AuthContext","isLoggedIn","userRole","onLogin","email","password","onLogout","AuthProvider","props","isUserLoggedIn","setIsUserLoggedIn","setUserRole","loggedIn","setLoggedIn","removeLoggedIn","Auth","loginHandler","fetch","method","headers","Accept","body","JSON","stringify","then","res","result","json","isCorrectPassword","path","role","console","log","logoutHandler","children"],"sources":["/Users/sivatejagonella/Projects/Archive/lms-ui/src/context/auth-context.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst AuthContext = createContext({\n  isLoggedIn: false,\n  userRole: \"\",\n  onLogin: (email, password) => {},\n  onLogout: () => {},\n});\n\nexport default AuthContext;\n\nexport const AuthProvider = (props) => {\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [userRole, setUserRole] = useState(\"\");\n  const [loggedIn, setLoggedIn, removeLoggedIn] = useCookies([\"Auth\"]);\n\n  useEffect(() => {\n    setIsUserLoggedIn(loggedIn.Auth === \"1\");\n  }, [loggedIn]);\n\n  const loginHandler = (email, password) => {\n    fetch(\"http://localhost:8080/demo/getUser\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    }).then(async (res) => {\n      let result = await res.json();\n      if (result.isCorrectPassword === 1) {\n        setLoggedIn(\"Auth\", 1, { path: \"/\" });\n        setUserRole(result.role);\n        setIsUserLoggedIn(true);\n        console.log(result);\n      }\n    });\n  };\n  const logoutHandler = () => {\n    setIsUserLoggedIn(false);\n    removeLoggedIn(\"Auth\");\n  };\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isUserLoggedIn,\n        userRole: userRole,\n        onLogin: loginHandler,\n        onLogout: logoutHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,UAAU,QAAQ,cAAc;AAAC;AAE1C,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EAChCK,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAC,CAAC;EAChCC,QAAQ,EAAE,MAAM,CAAC;AACnB,CAAC,CAAC;AAEF,eAAeN,WAAW;AAE1B,OAAO,MAAMO,YAAY,GAAIC,KAAK,IAAK;EAAA;EACrC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACI,QAAQ,EAAES,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAAEC,WAAW,EAAEC,cAAc,CAAC,GAAGf,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;EAEpEF,SAAS,CAAC,MAAM;IACda,iBAAiB,CAACE,QAAQ,CAACG,IAAI,KAAK,GAAG,CAAC;EAC1C,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,MAAMI,YAAY,GAAG,CAACZ,KAAK,EAAEC,QAAQ,KAAK;IACxCY,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBnB,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACZ,CAAC;IACH,CAAC,CAAC,CAACmB,IAAI,CAAC,MAAOC,GAAG,IAAK;MACrB,IAAIC,MAAM,GAAG,MAAMD,GAAG,CAACE,IAAI,EAAE;MAC7B,IAAID,MAAM,CAACE,iBAAiB,KAAK,CAAC,EAAE;QAClCf,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;UAAEgB,IAAI,EAAE;QAAI,CAAC,CAAC;QACrClB,WAAW,CAACe,MAAM,CAACI,IAAI,CAAC;QACxBpB,iBAAiB,CAAC,IAAI,CAAC;QACvBqB,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;MACrB;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMO,aAAa,GAAG,MAAM;IAC1BvB,iBAAiB,CAAC,KAAK,CAAC;IACxBI,cAAc,CAAC,MAAM,CAAC;EACxB,CAAC;EACD,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLb,UAAU,EAAEQ,cAAc;MAC1BP,QAAQ,EAAEA,QAAQ;MAClBC,OAAO,EAAEa,YAAY;MACrBV,QAAQ,EAAE2B;IACZ,CAAE;IAAA,UAEDzB,KAAK,CAAC0B;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA9CW3B,YAAY;EAAA,QAGyBR,UAAU;AAAA;AAAA,KAH/CQ,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}